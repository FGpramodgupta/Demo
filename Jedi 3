### **End-to-End Flow of ADC, JEDi, and Business Calculation Engine Integration with Deployment Strategy**  

#### **Flow Overview**  

1. **Email Processing & Document Procurement**  
   - Emails are processed in **ADC**, and the attached document is procured.  

2. **Routing via Service Mapping**  
   - The **Router Service** in ADC routes the document based on the **service mapping configuration**.  

3. **Existing NT Digitizer Flow**  
   - If the document follows the **NT Digitizer** process, it is uploaded to **Azure Blob Storage** for further processing.  

4. **JEDi Configuration Check & Metadata Transfer via Kafka**  
   - If **JEDi is configured** for the document‚Äôs domain, ADC sends the document metadata to **JEDi via Kafka**.  

5. **JEDi Extraction Process**  
   - The **JEDi Extractor** reads the document from **Azure Blob Storage**.  
   - It sends the document to **Azure Form Recognizer**, which extracts **paragraphs, tables, and key-value pairs**.  
   - A domain-specific **Form Recognizer model** is used for extraction.  

6. **JSON Building & Storage**  
   - After extraction, the **JSON Builder** creates the **Final JEDi JSON** output.  
   - This final JSON is stored in **Cosmos DB** with an **ADCGenID**, making it available for NT Digitizer processing.  

7. **NT Digitizer Processing**  
   - The **Digitizer** reads the document from **Azure Blob Storage**.  
   - It extracts relevant information from the document and processes it further.  

8. **Business Calculation Engine Processing**  
   - The **Digitizer Output** is sent to the **Business Calculation Engine**, which is hosted on **Azure Kubernetes Service (AKS)**.  
   - If a **JEDi Final Output** exists (identified via **ALEGenID**), the Business Calculation Engine **combines both JEDi and Digitizer outputs** for processing.  

9. **Final Output & UI Validation**  
   - The **final JSON output** is sent back to the **Digitizer**.  
   - The extracted and calculated results are displayed on the **UI**, where **BAU users validate the output**.  

---

## **Deployment Strategy**  

- **JEDi Deployment:** Hosted on an **On-Prem Windows Server**  
- **Business Calculation Engine Deployment:** Hosted on **Azure Kubernetes Service (AKS)**  

### **Pros & Cons of Deployment Strategy**  

#### **JEDi on On-Prem Windows Server**  
‚úÖ **Pros:**  
- **Security & Data Control:** Full control over data and compliance policies.  
- **Low Latency for ADC Integration:** Direct access to ADC without cloud dependencies.  
- **Custom Configuration:** Easier to configure based on enterprise needs.  

‚ùå **Cons:**  
- **Scalability Limitations:** Difficult to scale dynamically with increasing workloads.  
- **Maintenance Overhead:** Requires an internal IT team to manage infrastructure, updates, and security patches.  
- **Single Point of Failure:** Risk of downtime if the on-prem server encounters issues.  

---

#### **Business Calculation Engine on Azure Kubernetes Service (AKS)**  
‚úÖ **Pros:**  
- **Highly Scalable & Flexible:** Can scale based on workload demand dynamically.  
- **Containerized Deployment:** Kubernetes allows microservices-based deployment, making updates seamless.  
- **Efficient Resource Utilization:** Containers provide optimized resource management and better cost efficiency.  
- **Resiliency & High Availability:** AKS ensures redundancy, auto-recovery, and failover capabilities.  

‚ùå **Cons:**  
- **Complexity in Management:** Requires Kubernetes expertise for deployment, monitoring, and scaling.  
- **Cloud Dependency:** Network latency may occur when communicating between on-prem JEDi and AKS.  
- **Data Transfer Costs:** Sending large data from on-prem to AKS may incur additional cloud costs.  

---

### **Potential Optimizations**  
- **Hybrid Cloud Integration:** Use **Azure ExpressRoute** or **VPN Gateway** for secure and high-speed connectivity between on-prem JEDi and AKS.  
- **Kafka Optimization:** Implement **Kafka Connect** to optimize event-driven communication between ADC and JEDi.  
- **Security Enhancements:** Use **Azure Private Link** to secure communication between AKS and other Azure services.  
- **Cost Optimization:** Implement **auto-scaling** in AKS to reduce costs during low workload periods.  

---

This **hybrid deployment strategy** ensures **on-prem security for JEDi** while leveraging **scalability and resilience in AKS** for business calculations. Let me know if you need refinements! üöÄ
