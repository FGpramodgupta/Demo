### **End-to-End Flow of ADC, JEDi, and Business Calculation Engine Integration with Deployment Strategy**  

#### **Flow Overview**  

1. **Email Processing & Document Procurement**  
   - Emails are processed in the **ADC system**, and the attached document is procured.  

2. **Routing via Service Mapping**  
   - The **Router Service** in ADC routes the document based on the **service mapping configuration**.  

3. **Existing NT Digitizer Flow**  
   - If the document follows the **NT Digitizer** process, it is uploaded to **Azure Blob Storage** for further processing.  

4. **JEDi Configuration Check & Metadata Transfer**  
   - If **JEDi is configured** for the document‚Äôs domain, ADC sends the document metadata to **JEDi via Kafka**.  

5. **JEDi Extraction Process**  
   - The **JEDi Extractor** processes the document by sending it to **Azure Form Recognizer**, which extracts **paragraphs, tables, and key-value pairs**.  
   - A **domain-specific Form Recognizer model** is used for extraction.  

6. **JSON Building & Storage**  
   - After extraction, the **JSON Builder** creates the **Final JEDi JSON** output.  
   - This final JSON is stored in **Cosmos DB** with an **ADCGenID**, making it available for NT Digitizer processing.  

7. **NT Digitizer Processing**  
   - The **Digitizer** reads the document from **Azure Blob Storage**.  
   - It extracts relevant information from the document and processes it further.  

8. **Business Calculation Engine Processing**  
   - The **Digitizer Output** is sent to the **Business Calculation Engine** for calculations.  
   - If a **JEDi Final Output** exists (identified via **ALEGenID**), the Business Calculation Engine **combines both JEDi and Digitizer outputs** for processing.  

9. **Final Output & UI Validation**  
   - The **final JSON output** is sent back to the **Digitizer**.  
   - The extracted and calculated results are displayed on the **UI**, where **BAU users validate the output**.  

---

## **Deployment Strategy**  

- **JEDi Deployment:** Hosted on an **On-Prem Windows Server**  
- **Business Calculation Engine Deployment:** Hosted on **Azure App Service**  

### **Pros & Cons of Deployment Strategy**  

#### **JEDi on On-Prem Windows Server**  
‚úÖ **Pros:**  
- **Security & Data Control:** Full control over data storage and security policies.  
- **Customization:** Easier to configure and integrate with existing on-prem infrastructure.  
- **Low Latency for Internal Systems:** Direct access to ADC without cloud dependencies.  

‚ùå **Cons:**  
- **Scalability Issues:** Difficult to scale dynamically as workloads increase.  
- **High Maintenance Cost:** Requires internal IT team for server maintenance, patching, and upgrades.  
- **Limited Redundancy:** Risk of downtime if the on-prem server fails.  

---

#### **Business Calculation Engine on Azure App Service**  
‚úÖ **Pros:**  
- **Scalability:** Easily scales based on workload without manual intervention.  
- **High Availability:** Azure provides built-in redundancy and failover support.  
- **Lower Maintenance Overhead:** Azure manages infrastructure, updates, and security patches.  
- **Cost Efficiency:** Pay-as-you-go model optimizes cost based on actual usage.  

‚ùå **Cons:**  
- **Cloud Dependency:** Requires stable internet connectivity between on-prem JEDi and Azure App Service.  
- **Latency Concerns:** Potential network latency when transferring data between on-prem JEDi and Azure.  
- **Data Compliance Risks:** Sensitive data may require additional security measures before processing in the cloud.  

---

### **Potential Optimizations**  
- **Hybrid Approach:** Consider hosting JEDi on Azure VMs with VPN integration to improve scalability while maintaining security.  
- **Caching & Queueing:** Use **Azure Service Bus** or **Redis Cache** to optimize communication between JEDi and Business Calculation Engine.  
- **Auto-Scaling for Business Calculation:** Configure auto-scaling in **Azure App Service** to optimize performance and cost.  

---

This deployment strategy balances **security (on-prem JEDi)** and **scalability (Azure App Service)** while ensuring smooth document processing. Let me know if you need modifications! üöÄ
